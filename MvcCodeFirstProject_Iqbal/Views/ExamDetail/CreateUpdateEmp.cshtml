@model MvcCodeFirstProject_Iqbal.Models.ExamDetailDTO


@{ ViewBag.Title = "CreateUpdateEmp"; }


@using (Html.BeginForm("CreateUpdateEmp", "ExamDetail"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ExamDetailData.ExamName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExamDetailData.ExamName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExamDetailData.ExamName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExamDetailData.ExamDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExamDetailData.ExamDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExamDetailData.ExamDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExamDetailData.MCQ, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExamDetailData.MCQ, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExamDetailData.MCQ, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExamDetailData.Evidence, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExamDetailData.Evidence, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExamDetailData.Evidence, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExamDetailData.TraineeID, "TraineeID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TraineeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ExamDetailData.TraineeID, "", new { @class = "text-danger" })
            </div>
        </div>


        @Html.HiddenFor(model => model.ExamDetailData.ExamDetailID)
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>}
<table class="table">
    <tr>
        <th>ExamName</th>
        <th>ExamDate</th>
        <th>MCQ</th>
        <th>Evidence</th>
        <th>Total</th>
        <th>Trainee Name</th>
        <th>Action</th>
    </tr>
    @foreach (var item in Model.ExamDetailList)
    {
<tr>
    <td>
        @item.ExamName
    </td>
    <td>
        @item.ExamDate
    </td>
    <td>
        @item.MCQ
    </td>
    <td>
        @item.Evidence
    </td>
    <td>
        @item.Total
    </td>
    <td>
        @item.Trainee.TraineeName
    </td>
    <td>
        @Html.ActionLink("Edit", "Edit", new { id = item.ExamDetailID })
    </td>
    <td>
        @Html.ActionLink("Delete", "Delete", new { id = item.ExamDetailID })
    </td>
</tr>
}
</table>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
